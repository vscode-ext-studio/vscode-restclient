{
  "name": "rest-client",
  "displayName": "REST Client",
  "description": "REST Client for Visual Studio Code",
  "version": "0.24.5",
  "publisher": "humao",
  "author": {
    "name": "Huachao Mao",
    "email": "huachaomao@gmail.com"
  },
  "icon": "images/rest_icon.png",
  "galleryBanner": {
    "color": "#000000",
    "theme": "dark"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/Huachao/vscode-restclient/issues",
    "email": "huachaomao@gmail.com"
  },
  "homepage": "https://github.com/Huachao/vscode-restclient/blob/master/README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/Huachao/vscode-restclient.git"
  },
  "engines": {
    "vscode": "^1.57.0"
  },
  "categories": [
    "Other",
    "Snippets",
    "Linters",
    "Programming Languages"
  ],
  "keywords": [
    "REST",
    "Http",
    "GraphQL",
    "multi-root ready"
  ],
  "activationEvents": [
    "onCommand:rest-client.request",
    "onCommand:rest-client.save-response-body",
    "onCommand:rest-client.copy-response-body",
    "onCommand:rest-client.cancel-request",
    "onCommand:rest-client.copy-codesnippet",
    "onCommand:rest-client.copy-request-as-curl",
    "onLanguage:http"
  ],
  "main": "./dist/extension",
  "contributes": {
    "languages": [
      {
        "id": "http",
        "aliases": [
          "HTTP",
          "Http",
          "http"
        ],
        "extensions": [
          ".http",
          ".rest"
        ],
        "firstLine": "^(GET|POST|PUT|DELETE|PATCH|HEAD|OPTIONS|CONNECT|TRACE)\\s+(.*?)HTTP/[0-9\\.]+$",
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "http",
        "scopeName": "source.http",
        "path": "./syntaxes/http.tmLanguage.json"
      }
    ],
    "snippets": [
      {
        "language": "http",
        "path": "./snippets/http.json"
      }
    ],
    "commands": [
      {
        "command": "rest-client.request",
        "title": "Send Request",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.cancel-request",
        "title": "Cancel Request",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.save-response-body",
        "title": "Save Response Body",
        "icon": "$(save)",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.copy-response-body",
        "title": "Copy Response Body",
        "icon": "$(copy)",
        "category": "Rest Client"
      },
      {
        "command": "rest-client.copy-codesnippet",
        "title": "Copy Code Snippet",
        "icon": {
          "light": "./images/copy.svg",
          "dark": "./images/copy-inverse.svg"
        },
        "category": "Rest Client"
      },
      {
        "command": "rest-client.copy-request-as-curl",
        "title": "Copy Request As cURL",
        "category": "Rest Client"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "rest-client.save-response-body",
          "when": "httpResponsePreviewFocus"
        },
        {
          "command": "rest-client.copy-response-body",
          "when": "httpResponsePreviewFocus"
        },
        {
          "command": "rest-client.copy-codesnippet",
          "when": "codeSnippetPreviewFocus"
        }
      ],
      "editor/title": [
        {
          "when": "httpResponsePreviewFocus",
          "command": "rest-client.save-response-body",
          "group": "navigation@2"
        },
        {
          "when": "httpResponsePreviewFocus",
          "command": "rest-client.copy-response-body",
          "group": "navigation@3"
        },
        {
          "when": "codeSnippetPreviewFocus",
          "command": "rest-client.copy-codesnippet",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "command": "rest-client.request",
          "when": "editorTextFocus && editorLangId == http",
          "group": "rest-client@1"
        },
        {
          "command": "rest-client.copy-request-as-curl",
          "when": "editorTextFocus && editorLangId == http",
          "group": "rest-client@3"
        }
      ]
    },
    "keybindings": [
      {
        "command": "rest-client.request",
        "key": "ctrl+alt+r",
        "mac": "cmd+alt+r",
        "when": "editorTextFocus && editorLangId == 'http'"
      },
      {
        "command": "rest-client.request",
        "key": "ctrl+alt+r",
        "mac": "cmd+alt+r",
        "when": "editorTextFocus && editorLangId == 'plaintext'"
      },
      {
        "command": "rest-client.cancel-request",
        "key": "ctrl+alt+k",
        "mac": "cmd+alt+k",
        "when": "editorTextFocus && editorLangId == 'http'"
      },
      {
        "command": "rest-client.cancel-request",
        "key": "ctrl+alt+k",
        "mac": "cmd+alt+k",
        "when": "editorTextFocus && editorLangId == 'plaintext'"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "REST Client",
      "properties": {
        "rest-client.followredirect": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Follow HTTP 3xx responses as redirects."
        },
        "rest-client.timeoutinmilliseconds": {
          "type": "integer",
          "default": 0,
          "scope": "resource",
          "description": "Timeout in milliseconds. 0 for infinity"
        },
        "rest-client.requestNameAsResponseTabTitle": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Show request name as the response tab title"
        },
        "rest-client.environmentVariables": {
          "type": "object",
          "default": {
            "$shared": {}
          },
          "scope": "resource",
          "markdownDescription": "Sets the environments and custom variables belongs to it, especially the special environment name '$shared' is used to create variables shared across all the individual environments (e.g., `{\"$shared\": {\"version\": \"v1\"}, \"production\": {\"host\": \"api.example.com\"}, \"sandbox\":{\"host\":\"sandbox.api.example.com\"}}`)",
          "additionalProperties": {
            "anyOf": [
              {
                "type": "object",
                "default": {},
                "description": "Sets the custom variables belong to this environment",
                "additionalProperties": {
                  "anyOf": [
                    {
                      "type": "string",
                      "description": "Value of the custom variable"
                    }
                  ]
                }
              }
            ]
          }
        },
        "rest-client.previewResponseInUntitledDocument": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Preview response in untitled document if set to true, otherwise displayed in html view"
        },
        "rest-client.suppressResponseBodyContentTypeValidationWarning": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Suppress response body content type validation"
        },
        "rest-client.previewOption": {
          "type": "string",
          "enum": [
            "full",
            "headers",
            "body",
            "exchange"
          ],
          "enumDescriptions": [
            "Response headers, body and status line",
            "Response headers and status line",
            "Response body only",
            "Whole HTTP exchange including both request and response"
          ],
          "default": "full",
          "scope": "resource",
          "description": "Response preview output option"
        },
        "rest-client.disableHighlightResonseBodyForLargeResponse": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "markdownDescription": "Controls whether to highlight response body for response whose size is larger than limit specified by `rest-client.largeResponseSizeLimitInMB`"
        },
        "rest-client.disableAddingHrefLinkForLargeResponse": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "markdownDescription": "Controls whether to add href link in previewed response for response whose size is larger than limit specified by `rest-client.largeResponseSizeLimitInMB`"
        },
        "rest-client.largeResponseBodySizeLimitInMB": {
          "type": "number",
          "default": 5,
          "minimum": 0,
          "exclusiveMinimum": true,
          "scope": "resource",
          "markdownDescription": "Set the response body size threshold of MB to identify whether a response is a so-called 'large response', only used when `rest-client.disableHighlightResonseBodyForLargeResponse` and/or `rest-client.disableAddingHrefLinkForLargeResponse` is set to true"
        },
        "rest-client.previewColumn": {
          "type": "string",
          "enum": [
            "current",
            "beside"
          ],
          "markdownEnumDescriptions": [
            "Preview in the column of current request file",
            "previewing at the side of the current active column and the side direction depends on `workbench.editor.openSideBySideDirection` setting, either right or below the current editor column"
          ],
          "default": "beside",
          "scope": "resource",
          "description": "Response preview column option"
        },
        "rest-client.formParamEncodingStrategy": {
          "type": "string",
          "enum": [
            "automatic",
            "never",
            "always"
          ],
          "markdownEnumDescriptions": [
            "Detecting encoding or not automatically and do the encoding job if necessary",
            "Treat provided request body as is, no encoding job will be applied",
            "Use for the scenario that `automatic` option not working properly, e.g., some special characters(`+`) are not encoded correctly"
          ],
          "default": "automatic",
          "scope": "resource",
          "markdownDescription": "Form param encoding strategy for request body of `x-www-form-urlencoded`."
        },
        "rest-client.addRequestBodyLineIndentationAroundBrackets": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "markdownDescription": "Add line indentation around brackets(`{}`, `<>`, `[]`) in request body when pressing enter."
        },
        "rest-client.decodeEscapedUnicodeCharacters": {
          "type": "boolean",
          "default": false,
          "scope": "resource",
          "description": "Decode escaped unicode characters in response body."
        },
        "rest-client.logLevel": {
          "type": "string",
          "enum": [
            "error",
            "warn",
            "info",
            "verbose"
          ],
          "default": "error",
          "scope": "resource",
          "description": "The verbosity of logging in the REST output panel"
        },
        "rest-client.enableCustomVariableReferencesCodeLens": {
          "type": "boolean",
          "default": true,
          "scope": "resource",
          "description": "Enable/disable custom variable references CodeLens in request file"
        }
      }
    },
    "configurationDefaults": {
      "[http]": {
        "editor.quickSuggestions": {
          "other": true,
          "comments": false,
          "strings": true
        }
      }
    }
  },
  "scripts": {
    "webpack": "webpack --mode development",
    "build": "webpack --mode production",
    "vscode:prepublish": "npm run build",
    "watch": "webpack --mode development --watch --info-verbosity verbose"
  },
  "devDependencies": {
    "@types/node": "^12.11.7",
    "@types/vscode": "^1.57.0",
    "ts-loader": "^5.3.2",
    "typescript": "^3.7.3",
    "webpack": "^4.26.0",
    "webpack-cli": "^3.1.0"
  },
  "dependencies": {
    "axios": "^0.21.1",
    "combined-stream": "^1.0.5",
    "dotenv": "^8.2.0",
    "encodeurl": "^1.0.1",
    "highlight.js": "^10.4.1",
    "http-proxy-agent": "^2.1.0",
    "https-proxy-agent": "^2.2.3",
    "jsonpath-plus": "^0.20.1",
    "mime-types": "^2.1.14",
    "pretty-data": "^0.40.0",
    "yargs-parser": "~11.1.1"
  }
}
